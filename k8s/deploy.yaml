apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk047-stock-backend
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk047-stock-backend
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/actuator/prometheus'
        update: 1ae2adf933c27354a572ce4c738d013f
      labels:
        app: sk047-stock-backend
    spec:
      serviceAccountName: default
      containers:
        - name: sk047-stock-backend
          image: amdp-registry.skala-ai.com/skala25a/sk047-my-app:1.0.0-2-4184d9591be9
          imagePullPolicy: Always
          env:
            - name: USER_NAME
              value: sk047
            - name: NAMESPACE
              value: skala-practice
            - name: SPRING_PROFILES_ACTIVE
              value: local
          envFrom:
            - secretRef:
                name: my-app-secrets
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /actuator/health/startup
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            failureThreshold: 20
